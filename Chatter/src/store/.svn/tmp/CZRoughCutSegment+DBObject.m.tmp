//
//  CZRoughCutSegment.m
//  ScriptSync
//
//  Created by Curtis Jones on 2010.11.30.
//  Copyright 2010 Nexidia, Inc. All rights reserved.
//

#import "CZRoughCutSegment.h"
#import "CZRoughCut+DBObject.h"
#import "CZDocument.h"
#import "DBObject.h"
#import "DBConnection.h"
#import "DBResult.h"
#import "DBStatement.h"
#import "../Easy.h"

@interface CZRoughCutSegment (DBObjectPrivate)
- (void)dbobjectHandleResult:(DBResult *)result;
@end

@implementation CZRoughCutSegment (DBObject)

/**
 *
 *
 */
+ (NSArray *)dbobjectSelectAllForRoughCut:(CZRoughCut *)roughcut;
{
	BOOL retval = TRUE;
	DBConnection *connection = nil;
	DBResult *result = nil;
	DBStatement *statement = nil;
	NSMutableArray *segments = [NSMutableArray array];
	
	// from the roughcut to the document to the db connection
	if (nil == (connection = roughcut.document.dbconnection))
		@throw [NSException exceptionWithName:CZExceptionNoDbConnection reason:@"No connection associated with this roughcut." userInfo:nil];
	
	// get the prepared statement for this operation
	if (nil == (statement = [connection statementForName:@"roughcutsegment_select_all_by_roughcutid"]))
		@throw [NSException exceptionWithName:CZExceptionNoStatement reason:@"Could not find the required statement" userInfo:nil];
	
	// execute statement
	if (![connection exec:statement result:&result])
		CZ_DBOBJ_ERROR(statement,retval,done);
	
	// handle result
	while (![result isDone]) {
		CZRoughCutSegment *segment = [CZRoughCutSegment roughCutSegment];
		
		[segment dbobjectHandleResult:result];
		segment.roughCut = roughcut;
		
		if (segment.databaseId != 0)
			[segments addObject:segment];
		
		[result next];
	}
	
done:
	[statement clear];
	return segments;
}

/**
 *
 *
 */
- (BOOL)dbobjectInsert
{
	BOOL retval = TRUE;
	DBConnection *connection = nil;
	DBResult *result = nil;
	DBStatement *statement = nil;
	
	// from the document to the db connection
	if (nil == (connection = self.document.dbconnection))
		@throw [NSException exceptionWithName:CZExceptionNoDbConnection reason:@"No connection associated with this roughcut segment." userInfo:nil];
	
	// get the prepared statement for this operation
	if (nil == (statement = [connection statementForName:@"roughcutsegment_insert"]))
		@throw [NSException exceptionWithName:CZExceptionNoStatement reason:@"Could not find the required statement" userInfo:nil];
	
	// if this object already has a database key then don't insert it again
	if (mSegmentId != 0)
		@throw [NSException exceptionWithName:CZExceptionIllegalOperation reason:@"Can not insert an already inserted object" userInfo:nil];
	
	// the roguhcut segment depends on its media, which is required. if we don't have a media id but
	// we do have a media object, then try to save the media object. if that fails then we're back
	// where we started; if it succeeds, then we're ready to continue.
	if (self.mediaId == 0) {
		if (self.media == nil)
			@throw [NSException exceptionWithName:CZExceptionIllegalOperation reason:@"Can not insert a roughcut segment without a media" userInfo:nil];
		else {
			if (FALSE == [self.media save])
				@throw [NSException exceptionWithName:CZExceptionIllegalOperation reason:@"Failed to save media. Can not insert a roughcut segment without a media." userInfo:nil];
		}
	}
	
	// setup
	[statement bindUint32:self.roughCutId atIndex:1];
	[statement bindUint32:self.mediaId atIndex:2];
	[statement bindUint32:self.index atIndex:3];
	
	// execute statement
	if (![connection exec:statement result:&result])
		CZ_DBOBJ_ERROR(statement,retval,done);
	
	// get primary key
	if (FALSE == [connection lastInsertRowId:&mSegmentId])
		NSLog(@"%s.. failed to lastInsertRowId()", __PRETTY_FUNCTION__);
	
	// handle result
	[Easy postNotification:CZNotificationRoughCutSegmentInserted object:self.document userInfo:[NSDictionary dictionaryWithObjectsAndKeys:self, CZKeyRoughCutSegment, nil]];
	
done:
	[statement clear];
	return retval;
}

/**
 *
 *
 */
- (BOOL)dbobjectUpdate
{
	BOOL retval = TRUE;
	DBConnection *connection = nil;
	DBResult *result = nil;
	DBStatement *statement = nil;
	
	// from the document to the db connection
	if (nil == (connection = self.document.dbconnection))
		@throw [NSException exceptionWithName:CZExceptionNoDbConnection reason:@"No connection associated with this roughcut segment." userInfo:nil];
	
	// get the prepared statement for this operation
	if (nil == (statement = [connection statementForName:@"roughcut_update_by_id"]))
		@throw [NSException exceptionWithName:CZExceptionNoStatement reason:@"Could not find the required statement" userInfo:nil];
	
	// the record must already have been inserted before we can attempt to update it
	if (mRoughCutId == 0)
		@throw [NSException exceptionWithName:CZExceptionIllegalOperation reason:@"Can not update a record that hasn't yet been inserted" userInfo:nil];
	
	// setup
	[statement bindUint32:self.roughCutId atIndex:1];
	[statement bindUint32:self.mediaId atIndex:2];
	[statement bindUint32:self.index atIndex:3];
	[statement bindUint32:self.databaseId atIndex:4];
	
	// execute statement
	if (![connection exec:statement result:&result])
		CZ_DBOBJ_ERROR(statement,retval,done);
	
	// handle result
	[Easy postNotification:CZNotificationRoughCutSegmentChanged object:self.document userInfo:[NSDictionary dictionaryWithObjectsAndKeys:self, CZKeyRoughCutSegment, nil]];
	
done:
	[statement clear];
	return retval;
}

/**
 *
 *
 */
- (BOOL)dbobjectDelete
{
	BOOL retval = TRUE;
	DBConnection *connection = nil;
	DBResult *result = nil;
	DBStatement *statement = nil;
	
	// from the document to the db connection
	if (nil == (connection = self.document.dbconnection))
		@throw [NSException exceptionWithName:CZExceptionNoDbConnection reason:@"No connection associated with this roughcut segment." userInfo:nil];
	
	// get the prepared statement for this operation
	if (nil == (statement = [connection statementForName:@"roughcutsegment_delete_by_id"]))
		@throw [NSException exceptionWithName:CZExceptionNoStatement reason:@"Could not find the required statement" userInfo:nil];
	
	// the record must already have been inserted before we can attempt to delete it
	if (mSegmentId == 0)
		@throw [NSException exceptionWithName:CZExceptionIllegalOperation reason:@"Can not delete a record that hasn't yet been inserted" userInfo:nil];
	
	// setup
	[statement bindUint32:mSegmentId atIndex:1];
	
	// execute statement
	if (![connection exec:statement result:&result])
		CZ_DBOBJ_ERROR(statement,retval,done);
	
	// handle result
	[Easy postNotification:CZNotificationRoughCutSegmentDeleted object:self.document userInfo:[NSDictionary dictionaryWithObjectsAndKeys:self, CZKeyRoughCutSegment, nil]];
	
done:
	[statement clear];
	return retval;
}





#pragma mark -
#pragma mark Private

/**
 *
 *
 */
- (void)__dbobjectHandleResult:(DBResult *)result
{
	[result getUint32:&mSegmentId atColumn:0];
	[result getUint32:&mRoughCutId atColumn:1];
	[result getUint32:&mMediaId atColumn:2];
	[result getUint32:&mIndex atColumn:3];
}

@end
